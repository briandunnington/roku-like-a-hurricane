<?xml version="1.0" ?>

<rss version="2.0">
    <channel>
        <title>Roku Like A Hurricane</title>
        <link>http://192.168.1.139:52757</link>
        <description>rokulikeahurricane.io RSS Feed</description>
        <language>en-us</language>
        <copyright>Copyright 2019 - Brian Dunnington</copyright>
        <pubDate>Tue, 18 Dec 2018 08:40:23 GMT</pubDate>
        <lastBuildDate>Tue, 18 Dec 2018 08:40:23 GMT</lastBuildDate>

        <item>
            <title>Nodes and Associative Array fields</title>
            <link>http://192.168.1.139:52757/node_aa.html</link>
            <description><![CDATA[
<p>Like a lot of other languages, BrightScript passes 'intrinsic' types by value and 'object' types by reference. In fact, <a href="https://sdkdocs.roku.com/display/sdkdoc/Component+Architecture#ComponentArchitecture-Intrinsictypesandobjecttypes">their documentation</a> shows an example of how this works:</p>

<pre class="  language-vbnet"><code class="  language-vbnet"><span class="token keyword">function</span> Modify<span class="token punctuation">(</span>a <span class="token keyword">as</span> <span class="token keyword">Integer</span><span class="token punctuation">,</span> b <span class="token keyword">as</span> <span class="token keyword">Object</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Void
    a <span class="token operator">=</span> <span class="token number">43</span>
    b.first <span class="token operator">=</span> <span class="token number">6</span>
<span class="token keyword">end</span> <span class="token keyword">function</span>
<span class="token comment">'.....</span>
x <span class="token operator">=</span> <span class="token number">42</span>
y <span class="token operator">=</span> { first<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> second<span class="token punctuation">:</span> <span class="token number">2</span> }
Modify<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
<span class="token comment">' now x is still 42 but y.first is 6</span></code></pre>

<p>As you can see, <code>y</code> was an associative array that got passed to the <code>Modify()</code> function. The <code>Modify()</code> function changed one of the properties on the <code>y</code> object, and since it was passed by ref, the original <code>y</code> object was updated.</p>

<p>But did you know that this is only true some of the time? Consider a simple component like this:</p>

<pre class="  language-markup"><code class=" language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>MyComponent<span class="token punctuation">"</span></span> <span class="token attr-name">extends</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Group<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/brightscript<span class="token punctuation">"</span></span> <span class="token attr-name">uri</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pkg:/components/MyComponent.brs<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>interface</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>props<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>assocarray<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>interface</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>component</span><span class="token punctuation">&gt;</span></span></code></pre>

<p>This component defines a single additional field called <code>props</code> that is of type <code>assocarray</code>. We use this component like this:</p>

<pre class="  language-vbnet"><code class="  language-vbnet">    my <span class="token operator">=</span> m.top.findNode<span class="token punctuation">(</span><span class="token string">"my"</span><span class="token punctuation">)</span>
    my.props <span class="token operator">=</span> {
        text<span class="token punctuation">:</span> <span class="token string">"initial text"</span>
        count<span class="token punctuation">:</span> <span class="token number">1</span>
    }</code></pre>

<p>And when we inspect the value, it is what we would expect:</p>

<p><img src="/img/node_aa_1.png" /></p>

<p>Pretty straight-forward so far. And since we learned that AAs are passed by ref, we can modify the value like this:</p>

<p><code>my.props.count = 2</code></p>

<p>And when we inspect the value:</p>

<p><img src="/img/node_aa_2.png" /></p>

<p>Wait, what?! We just set the value of the <code>count</code> property to 2, so why is it reporting it as 1?</p>

<p>The answer is that AAs are '<a href="https://sdkdocs.roku.com/display/sdkdoc/Optimization+Techniques#OptimizationTechniques-DataFlow">deep-copied through fields (pass-by-value)</a>'. So in the special case where the AA is a field on a node, it is <strong>not</strong> passed by ref, but is instead copied. So when we did this:</p>

<p><code>my.props.count = 2</code></p>

<p>what really happened is that <code>my.props</code> returned a <em>copy</em> of the AA, on which we set the <code>count</code> property to 2. When we inspected <code>my.props</code> again, it was yet another copy which of course did <em>not</em> contain the changes.</p>

<p>So how do you actually update a property on an AA like this? You don't 😜 Instead, you have to update the entire AA. The common pattern is:</p>

<pre><code>props = my.props
props.count = 2
m.props = props
</code></pre>

<p>Here we get a copy of the AA, update it, and then set the node's field to the new AA. We can see that by doing this, the AA now reports the correct values:</p>

<p><img src="/img/node_aa_3.png" /></p>

<p>There is one other caveat to this copying behavior. Consider a normal AA like this:</p>

<pre class="  language-vbnet"><code class="  language-vbnet">    props <span class="token operator">=</span> {
        text<span class="token punctuation">:</span> <span class="token string">"initial text"</span>
        count<span class="token punctuation">:</span> <span class="token number">1</span>
        func<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token string">"func called"</span>
        <span class="token keyword">end</span> <span class="token keyword">function</span>
    }</code></pre>

<p>This AA defines <code>func</code> as a function, and when we call it, we get the expected results:</p>

<p><img src="/img/node_aa_4.png" /></p>

<p>But if we set this AA as a node field and call it:</p>

<pre class="  language-vbnet"><code class="  language-vbnet">    props <span class="token operator">=</span> {
        text<span class="token punctuation">:</span> <span class="token string">"initial text"</span>
        count<span class="token punctuation">:</span> <span class="token number">1</span>
        func<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token string">"func called"</span>
        <span class="token keyword">end</span> <span class="token keyword">function</span>
    }
    my <span class="token operator">=</span> m.top.findNode<span class="token punctuation">(</span><span class="token string">"my"</span><span class="token punctuation">)</span>
    my.props <span class="token operator">=</span> props</code></pre>

<p><img src="/img/node_aa_5.png" /></p>

<p>The call fails, and when we inspect the AA, we see that the <code>func</code> property does not even exist! Every time the AA is copied, any function properties are silently stripped out (presumably to make them 'data-only' so that they can be marshalled across thread boundaries if necessary). Definitely something to watch out for since the debugger does not give any kind of hint that this has happened until you try to access the now-missing function.</p>

<p>As you might imagine, all of this has some substantial performance implications, especially when copying AAs across thread boundaries. Stay tuned for another post that dives deep into how to deal with those situations and some recommendations on best practices to ensure optimum performance.</p>

]]></description>
            <pubDate>Wed, 19 Dec 2018 12:00:00 GMT</pubDate>
            <guid>http://192.168.1.139:52757/node_aa.html</guid>
        </item>
        <item>
            <title>Component initialization order</title>
            <link>http://192.168.1.139:52757/init_order.html</link>
            <description><![CDATA[
<p>Roku's documenation contains <a href="https://sdkdocs.roku.com/display/sdkdoc/Component+Initialization+Order">a good article</a> about component initialization order. Specifically, it states:</p>

<blockquote>
  <p>Instances of components defined in an XML file follow a well-defined initialization order when they are created.</p>
  
  <ul>
  <li>The <code>&lt;children&gt;</code> element nodes defined in XML markup are created, and their fields are set to their initial values, either to a default value, or to the value specified in the XML markup.</li>
  <li>The <code>&lt;interface&gt;</code> element fields of the XML component are created, and their initial values are set, either to a default value, or to the value specified by the value attribute.</li>
  <li>The <code>&lt;script&gt;</code> element <code>init()</code> function is called, and all initializations contained in the function are performed.</li>
  </ul>
</blockquote>

<p>While that is very helpful, it leaves out some subtle bits and sometimes it can be hard to visualize, so let's do some experiments to better illustrate the order.</p>

<p>Consider the following component hierarchies:</p>

<pre><code>Parent &gt; ParentBase &gt; Group
Child &gt; ChildBase &gt; Group
</code></pre>

<p>Let's let the <code>ParentBase</code> component define a <code>Child</code> in its <code>&lt;children&gt;</code> markup:</p>

<pre class="  language-markup"><code class="  language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ParentBase<span class="token punctuation">"</span></span> <span class="token attr-name">extends</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Group<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/brightscript<span class="token punctuation">"</span></span> <span class="token attr-name">uri</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pkg:/components/ParentBase.brs<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>children</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>childInParentBase<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>children</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>component</span><span class="token punctuation">&gt;</span></span></code></pre>

<p>And, let's imagine that the <code>Parent</code> component defines a <code>Child</code> component as part of its <code>&lt;children&gt;</code>:</p>

<pre class="  language-markup"><code class="  language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Parent<span class="token punctuation">"</span></span> <span class="token attr-name">extends</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ParentBase<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/brightscript<span class="token punctuation">"</span></span> <span class="token attr-name">uri</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pkg:/components/Parent.brs<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>children</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>childFromParent<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>children</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>component</span><span class="token punctuation">&gt;</span></span>
</code></pre>

<p>Now consider another component that uses the <code>Parent</code> component and defines some additional children:</p>

<pre class="  language-markup"><code class="  language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>OtherComponent<span class="token punctuation">"</span></span> <span class="token attr-name">extends</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Group<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/brightscript<span class="token punctuation">"</span></span> <span class="token attr-name">uri</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pkg:/components/OtherComponent.brs<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>children</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Parent</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>firstchild<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>secondchild<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Parent</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>children</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>component</span><span class="token punctuation">&gt;</span></span>
</code></pre>

<p>If you run this code, you will see that the order of the <code>init</code> calls is actually:</p>

<pre><code>ChildBase for childInParentBase
Child for childInParentBase
ParentBase for parent
ChildBase for childFromParent
ChildBase for childFromParent
Parent for parent
ChildBase for firstChild
Child for firstChild
ChildBase for secondChild
Child for secondChild
</code></pre>

<p>So if we wanted to write a more complete order of initialization, it might look like this:</p>

<ol>
<li>If the component extends another component, the base component (including all children) will be initialized first</li>
<li>Initialize nodes defined in <code>&lt;children&gt;</code></li>
<li>Call component's <code>init()</code> method</li>
<li>Field values are available for reading</li>
<li>Children added via markup are initialized</li>
</ol>

<p>Understanding the order is helpful, but understanding the implications is also very important. Consider these perhaps subtle implications:</p>

<h3>Non-default field values are not available in <code>init()</code></h3>

<p>Consider this <code>init()</code> code:</p>

<pre class="  language-vbnet"><code class="  language-vbnet"><span class="token keyword">sub</span> init<span class="token punctuation">(</span><span class="token punctuation">)</span>
    ?<span class="token string">"My id is: "</span> <span class="token operator">+</span> m.top.id
<span class="token keyword">end</span> <span class="token keyword">sub</span></code></pre>

<p>Assuming the <code>id</code> property was set in markup, you might be surprised to see the output of this is:</p>

<pre><code>My id is:
</code></pre>

<p>At the time that <code>init()</code> is called, any non-defaulf field values are not yet set, so <code>m.top.id</code> has no value.</p>

<p>Similarly, any values you set on <code>m.top</code> in <code>init()</code> could be overwritten when initialization is complete:</p>

<pre class="  language-vbnet"><code class="  language-vbnet"><span class="token keyword">sub</span> init<span class="token punctuation">(</span><span class="token punctuation">)</span>
    m.top.id <span class="token operator">=</span> <span class="token string">"set_in_init"</span>
    ?<span class="token string">"My id is: "</span> <span class="token operator">+</span> m.top.id
<span class="token keyword">end</span> <span class="token keyword">sub</span>

<span class="token keyword">function</span> onKeyEvent<span class="token punctuation">(</span>key<span class="token punctuation">,</span> press<span class="token punctuation">)</span>
    ?<span class="token string">"My id is now: "</span> <span class="token operator">+</span> m.top.id
    <span class="token keyword">return</span> <span class="token keyword">true</span>
<span class="token keyword">end</span> <span class="token keyword">function</span>
</code></pre>

<p>Prints:</p>

<pre><code>My id is: set_in_init
My id is now: parent
</code></pre>

<h3>Cannot <code>setFocus()</code> from <code>init()</code></h3>

<p>The Roku docs say:</p>

<blockquote>
  <p>For nodes that are defined in the <code>&lt;children&gt;</code> XML markup of the component file, the parent node is set after the node is created, and <code>init()</code> is called.</p>
</blockquote>

<p>What that means is that the children created in a component are not yet valid targets for focus while <code>init()</code> is running. The children are not parented (added to the Scene Graph tree) until after <code>init()</code> is complete and calls to <code>setFocus()</code> require that the node being focused is in the Scene Graph tree. <strong>However</strong>, experimentation has shown that you can often get away with calling <code>setFocus()</code> on a child in the <code>init()</code> and I personally have done it often in real apps. I have also seen it not work and struggled to figure out why, so it is probably better to just avoid the ambiguity and not do this.</p>

<p>(It is usually not a good idea to set the focus during object creation anyway, and a better approach is to set up an observer on <code>focusedChild</code> so that your component is aware when something is trying to set focus on it and handle focus at that time.)</p>

]]></description>
            <pubDate>Tue, 18 Dec 2018 12:00:00 GMT</pubDate>
            <guid>http://192.168.1.139:52757/init_order.html</guid>
        </item>
        <item>
            <title>A Different Kind of &#39;Rule of Thirds&#39;</title>
            <link>http://192.168.1.139:52757/divisible_by_3.html</link>
            <description><![CDATA[
<p>Roku devices <a href="https://sdkdocs.roku.com/display/sdkdoc/Specifying+Display+Resolution">support a few different resolutions</a> for displaying your app's UI:</p>

<ul>
<li>FHD (1920x1080)</li>
<li>HD (1280x720)</li>
<li>SD (720x480)</li>
</ul>

<p><em>NOTE: This post is only going to focus on FHD and HD. Since SD is a different aspect ratio (4:3) and most Roku devices cannot output SD anyway, it is usually easier to omit explict support and let the Roku autoscale the UI to handle SD.</em></p>

<p>Although you can provide explicit layouts for both HD and FHD, a much more common approach is to only provide the FHD layout and let the Roku downscale the UI to handle HD automatically. To do this, simply add this to your <code>manifest</code> file:</p>

<p><code>ui_resolutions=FHD</code></p>

<p>Now, you can simply use a 1920x1080 grid when specifying your UI dimensions and Roku will automatically handle converting it to HD as necessary. In order to autoscale the UI down, all of the dimensions are essentially multiplied by 2/3. So an element that is half-a-screen wide in and FHD app would be specified as 960 (1920/2), but would correctly render at 640 (960 * 2/3) on an HD screen.</p>

<p>However, there is a catch with this approach. Since everything is multiplied by 2/3, the original element dimensions must always be divisible by 3 to avoid rounding issues. Consider the following layout which renders a 3x3 grid - it is 597px wide (<a href="http://www.aaamath.com/div66_x3.htm">which is divisible by 3 since 5+9+7=12, which is divisible by 3</a>) and thus each square is 199x199:</p>

<pre class="  language-markup"><code class="  language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>597<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>597<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0xFFFFFF<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>199<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>199<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0xFF0000<span class="token punctuation">"</span></span> <span class="token attr-name">translation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[0,0]<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>199<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>199<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0x00FF00<span class="token punctuation">"</span></span> <span class="token attr-name">translation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[199,0]<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>199<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>199<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0xFF0000<span class="token punctuation">"</span></span> <span class="token attr-name">translation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[398,0]<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>199<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>199<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0x00FF00<span class="token punctuation">"</span></span> <span class="token attr-name">translation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[0,199]<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>199<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>199<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0xFF0000<span class="token punctuation">"</span></span> <span class="token attr-name">translation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[199,199]<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>199<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>199<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0x00FF00<span class="token punctuation">"</span></span> <span class="token attr-name">translation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[398,199]<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>199<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>199<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0xFF0000<span class="token punctuation">"</span></span> <span class="token attr-name">translation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[0,399]<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>199<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>199<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0x00FF00<span class="token punctuation">"</span></span> <span class="token attr-name">translation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[199,398]<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>199<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>199<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0xFF0000<span class="token punctuation">"</span></span> <span class="token attr-name">translation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[398,398]<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Rectangle</span><span class="token punctuation">&gt;</span></span></code></pre>

<p><img src="/img/divisible_by_3_1.png" style="width: 600px;" /></p>

<p>If you look closely, you can see there are some white lines along the right edge of the grid. Zooming in on the image, we can see:</p>

<p><img src="/img/divisible_by_3_2.png" style="width: 600px;" /></p>

<p>The squares are not lining up correctly since 199 is not divisible by 3. Let's work through what is going on.</p>

<ul>
<li>The overall grid is 597x597 which is divisible by 3. The HD grid should end up 597 * 2/3 = 398px wide</li>
<li>In order to make a 3x3 grid, each square is 199x199 - 199 is <em>not</em> divisible by 3</li>
<li>199 * 2/3 = 132.66666667 which gets rendered as 132</li>
<li>The top left square ends up 132x132 at position 0,0</li>
<li>The top middle square ends up rendered at position 132,0 so there is no gap</li>
<li>The top right square should have been rendered at 398,0, which converts to 265 in HD. But since the first two squares were only 132 each, they only take up 264px so there ends up being a 1px gap between the second and third columns.</li>
<li>Same thing happens between the second and third rows</li>
<li>The top right square gets positioned at 265, but since it is only 132px wide, it only fills in to 397, leaving a 1px gap along the right edge (same along the bottom row)</li>
</ul>

<p>So if we adjust our dimensions so that each individual square is divisible by 3 in both dimensions, we get:</p>

<pre class="  language-markup"><code class="  language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>603<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>603<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0xFFFFFF<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>201<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>201<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0xFF0000<span class="token punctuation">"</span></span> <span class="token attr-name">translation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[0,0]<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>201<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>201<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0x00FF00<span class="token punctuation">"</span></span> <span class="token attr-name">translation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[201,0]<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>201<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>201<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0xFF0000<span class="token punctuation">"</span></span> <span class="token attr-name">translation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[402,0]<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>201<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>201<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0x00FF00<span class="token punctuation">"</span></span> <span class="token attr-name">translation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[0,201]<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>201<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>201<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0xFF0000<span class="token punctuation">"</span></span> <span class="token attr-name">translation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[201,201]<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>201<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>201<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0x00FF00<span class="token punctuation">"</span></span> <span class="token attr-name">translation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[402,201]<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>201<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>201<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0xFF0000<span class="token punctuation">"</span></span> <span class="token attr-name">translation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[0,402]<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>201<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>201<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0x00FF00<span class="token punctuation">"</span></span> <span class="token attr-name">translation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[201,402]<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rectangle</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>201<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>201<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0xFF0000<span class="token punctuation">"</span></span> <span class="token attr-name">translation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[402,402]<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Rectangle</span><span class="token punctuation">&gt;</span></span></code></pre>

<p><img src="/img/divisible_by_3_3.png" style="width: 600px;" /></p>

<p>Here are the two grids side by side for comparison:</p>

<p><img src="/img/divisible_by_3_4.png" style="width: 600px;" /></p>

<p>Note that this applies to all UI dimensions, not just <code>width</code> and <code>height</code>. Any property that specifies a UI dimension is affected, including <code>translation</code> and <code>scale</code>. <code>scale</code> is particularly tricky because the resulting post-scaled dimension must be divisible by 3. So:</p>

<ul>
<li>600 ✔️ with <code>scale</code> of <code>0.8</code> = 480 ✔️ * 2/3 = 320 ✔️</li>
<li>597 ✔️ with <code>scale</code> of <code>0.8</code> = 477.6 ❌</li>
</ul>

]]></description>
            <pubDate>Mon, 17 Dec 2018 12:00:00 GMT</pubDate>
            <guid>http://192.168.1.139:52757/divisible_by_3.html</guid>
        </item>
        <item>
            <title>Poster component property order</title>
            <link>http://192.168.1.139:52757/poster_property_order.html</link>
            <description><![CDATA[
<p>Often when loading images from the web, we do not have control over how large the source images are. Loading images
that are too large will eat up precious Roku memory and cause performance problems in your app.</p>

<p>However, the <code>Poster</code> component does have the ability to automatically resize the incoming image as it is loaded so
that no excess memory is used. The <a href="https://sdkdocs.roku.com/display/sdkdoc/Poster">Roku docs</a> indicate that you can use the following
properties to control how the image is loaded into memory:</p>

<ul>
<li><code>loadWith</code></li>
<li><code>loadHeight</code></li>
<li><code>loadDisplayMode</code></li>
</ul>

<p>By using these properties, you can load an image that is normally too large but only consume the memory required for the
desired final size. For example:</p>

<pre class="  language-markup"><code class="  language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Poster</span> <span class="token attr-name">uri</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://big.image<span class="token punctuation">"</span></span> <span class="token attr-name">loadDisplayMode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scaleToZoom<span class="token punctuation">"</span></span> <span class="token attr-name">loadWidth</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>720<span class="token punctuation">"</span></span> <span class="token attr-name">loadHeight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>405<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span></code></pre>

<p>If you view the <a href="https://sdkdocs.roku.com/display/sdkdoc/Texture+Memory">texture memory</a>, you can see:</p>

<p><img src="/img/poster_properties_1.png" /></p>

<p>But wait - why does it report that the image is 1920x1080 if we specified it to be 720x405? The Roku docs actually mention
the reason, but it is not always immediately obvious:</p>

<blockquote>
  <p>In order for the load scaling options to work, the option fields must be set in XML markup before the <code>uri</code> field.</p>
</blockquote>

<p>What that means is that <strong>property source order is important</strong>. As soon as the <code>uri</code> field is set, the image begins loading
with whatever options have been set. If the <code>load*</code> properties have not been set yet, they will be ignored. So we need to
change our markup to ensure that the <code>uri</code> is set <em>after</em> the other properties:</p>

<pre class="  language-markup"><code class="  language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Poster</span> <span class="token attr-name">loadDisplayMode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scaleToZoom<span class="token punctuation">"</span></span> <span class="token attr-name">loadWidth</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>720<span class="token punctuation">"</span></span> <span class="token attr-name">loadHeight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>405<span class="token punctuation">"</span></span> <span class="token attr-name">uri</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://big.image<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span></code></pre>

<p>Now when you view the texture memory, you see:</p>

<p><img src="/img/poster_properties_2.png" /></p>

<p>That looks more like it. Even though the Roku docs mention this, it catches lots of folks off guard since xml property order is normally not significant.</p>

]]></description>
            <pubDate>Mon, 17 Dec 2018 12:00:00 GMT</pubDate>
            <guid>http://192.168.1.139:52757/poster_property_order.html</guid>
        </item>
        <item>
            <title>Patterns</title>
            <link>http://192.168.1.139:52757/categories/patterns.html</link>
            <description><![CDATA[
<p>[this page will list all in the category]</p>

]]></description>
            <pubDate>Mon, 17 Dec 2018 12:00:00 GMT</pubDate>
            <guid>http://192.168.1.139:52757/categories/patterns.html</guid>
        </item>
        <item>
            <title>Performance</title>
            <link>http://192.168.1.139:52757/categories/performance.html</link>
            <description><![CDATA[
<p>[this page will list all in the category]</p>

]]></description>
            <pubDate>Mon, 17 Dec 2018 12:00:00 GMT</pubDate>
            <guid>http://192.168.1.139:52757/categories/performance.html</guid>
        </item>
        <item>
            <title>Tips</title>
            <link>http://192.168.1.139:52757/categories/tips.html</link>
            <description><![CDATA[
<p>[this page will list all in the category]</p>

]]></description>
            <pubDate>Mon, 17 Dec 2018 12:00:00 GMT</pubDate>
            <guid>http://192.168.1.139:52757/categories/tips.html</guid>
        </item>
        <item>
            <title>Tools</title>
            <link>http://192.168.1.139:52757/categories/tools.html</link>
            <description><![CDATA[
<p>[this page will list all in the category]</p>

]]></description>
            <pubDate>Mon, 17 Dec 2018 12:00:00 GMT</pubDate>
            <guid>http://192.168.1.139:52757/categories/tools.html</guid>
        </item>
    </channel>
</rss>
